<?php

/**
 * Implements hook_schema().
 */
function agileissues_schema() {
  return array(
    'agileissues_projects' => _agileissues_schema_projects(),
    'agileissues_sprints' => _agileissues_schema_sprints(),
    'agileissues_backlogs' => _agileissues_schema_backlogs(),
    'agileissues_stories' => _agileissues_schema_stories(),
    'agileissues_tasks' => _agileissues_schema_tasks(),
    'agileissues_notes' => _agileissues_schema_notes(),
    'agileissues_task_types' => _agileissues_schema_task_types(),
    'agileissues_story_types' => _agileissues_schema_story_types(),
    'agileissues_project_types' => _agileissues_schema_project_types(),
    'agileissues_backlog_types' => _agileissues_schema_backlog_types(),
    'agileissues_sprint_types' => _agileissues_schema_sprint_types(),
    'agileissues_changelog' => _agileissues_schema_changelog(),
    'agileissues_relationships' => _agileissues_schema_relationships(),
    'agileissues_project_backlog' => _agileissues_schema_project_backlog(),
  );
}

/**
 * Switch the changelog to not be attached to notes. Previous changelog records
 * will be lost.
 */
function agileissues_update_7100() {
  db_drop_field('agileissues_changelog', 'note_id');
  db_add_field('agileissues_changelog', 'entity_type', array(
    'type' => 'varchar',
    'length' => 1024,
    'not null' => TRUE,
  ));
  db_add_field('agileissues_changelog', 'entity_id', array(
    'type' => 'int',
    'size' => 'normal',
    'unsigned' => TRUE,
    'not null' => TRUE,
  ));
}

/**
 * 
 */
function agileissues_update_7101() {
}

/**
 * 
 */
function agileissues_update_7102() {
}

/**
 * New DB fields!
 */
function agileissues_update_7103() {
  if (!db_field_exists('agileissues_stories', 'status')) {
    db_add_field('agileissues_stories', 'status', array(
      'type' => 'char',
      'length' => 1,
      'not null' => TRUE,
    ));
  }
  if (!db_field_exists('agileissues_stories', 'sprint_id')) {
    db_add_field('agileissues_stories', 'sprint_id', array(
      'type' => 'int',
      'size' => 'normal',
      'unsigned' => TRUE,
      'not null' => FALSE,
    ));
  }
  if (!db_field_exists('agileissues_tasks', 'creator')) {
    db_add_field('agileissues_tasks', 'creator', array(
      'type' => 'int',
      'size' => 'normal',
      'unsigned' => TRUE,
      'not null' => FALSE,
    ));
  }
}

/**
 * Support for privacy settings.
 */
function agileissues_update_7104() {
  $field = array(
    'type' => 'char',
    'length' => 1,
    'not null' => TRUE,
    'initial' => 'P',
  );
  if (!db_field_exists('agileissues_tasks', 'privacy')) {
    db_add_field('agileissues_tasks', 'privacy', $field);
  }
  if (!db_field_exists('agileissues_stories', 'privacy')) {
    db_add_field('agileissues_stories', 'privacy', $field);
  }
  if (!db_field_exists('agileissues_sprints', 'privacy')) {
    db_add_field('agileissues_sprints', 'privacy', $field);
  }
  if (!db_field_exists('agileissues_notes', 'privacy')) {
    db_add_field('agileissues_notes', 'privacy', $field);
  }
  if (!db_field_exists('agileissues_projects', 'privacy')) {
    db_add_field('agileissues_projects', 'privacy', $field);
  }
  if (!db_table_exists('agileissues_project_backlog')) {
    db_create_table('agileissues_project_backlog', _agileissues_schema_project_backlog());
  }
}

/**
 * Table definition for agileissues_relationships
 */
function _agileissues_schema_relationships() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'left_entity_type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'left_entity_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'right_entity_type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'right_entity_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'relationship_type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_project_backlog
 */
function _agileissues_schema_project_backlog() {
  return array(
    'fields' => array(
      'project_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'backlog_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'used' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
    ),
    'primary key' => array(),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_changelog
 */
function _agileissues_schema_changelog() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => TRUE,
      ),
      'entity_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'property_key' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'old_value' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'new_value' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_task_types
 */
function _agileissues_schema_sprint_types() {
  return array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'machine_name',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_task_types
 */
function _agileissues_schema_project_types() {
  return array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'machine_name',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_task_types
 */
function _agileissues_schema_backlog_types() {
  return array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'machine_name',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_task_types
 */
function _agileissues_schema_story_types() {
  return array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'machine_name',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_task_types
 */
function _agileissues_schema_task_types() {
  return array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'machine_name',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_notes
 */
function _agileissues_schema_notes() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'time_spent' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'note_text' => array(
        'type' => 'text',
        'size' => 'normal',
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_tasks
 */
function _agileissues_schema_tasks() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'story_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'sprint_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'weight' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'creator' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'estimated_time' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_stories
 */
function _agileissues_schema_stories() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'backlog_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'project_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'weight' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'reporting_uid' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'primary_uid' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'story_points' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'priority_score' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
      ),
      'status' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
      'sprint_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_projects
 */
function _agileissues_schema_projects() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'default_backlog' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_backlogs
 */
function _agileissues_schema_backlogs() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}

/**
 * Table definition for agileissues_sprints
 */
function _agileissues_schema_sprints() {
  return array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'normal',
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'start_date' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'end_date' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'project_id' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'serialize' => FALSE,
        'binary' => FALSE,
      ),
      'status' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
      'privacy' => array(
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(),
    'indexes' => array(),
  );
}
